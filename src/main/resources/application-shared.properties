server.port=8086
dbName=fileUploadDB
spring.zipkin.baseUrl= http://localhost:9411/
spring.application.name = fileUpload
spring.sleuth.sampler.probability = 1.0
# start of jackson related config #

spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.WRITE_EMPTY_JSON_ARRAYS=false

# end of jackson related config #

# start of logging config #

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate=ERROR

# end of logging config #

# start of logbook config #

logbook.obfuscate.headers=[Authorization]
logbook.obfuscate.parameters=[access_token,password]
logbook.write.category=http.wire-log
logbook.write.level=DEBUG
logging.level.http.wire-log=DEBUG
logging.level.org.zalando.logbook=DEBUG

# end of logbook config #

# start of mysql related config #
aws-instance-uri=
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
spring.datasource.url=jdbc:mysql://${aws-instance-uri}:3306/${dbName}?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=Password1!
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
# end of mysql related config #


# start of h2 related config #

#spring.jpa.properties.hibernate.jdbc.time_zone = UTC
#spring.datasource.url=jdbc:h2:file:./db/${dbName};DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=none
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.web-allow-others=true

# end of h2 related config #

# start of compression config #
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
# end of compression config #
service.url.eureka=
eureka.client.serviceUrl.defaultZone = ${EUREKA_URI:${service.url.eureka}}
eureka.instance.preferIpAddress = true
eureka.instance.ip-address =